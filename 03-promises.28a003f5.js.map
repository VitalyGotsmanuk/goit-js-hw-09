{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,QAAQC,IAAIC,EAAAJ,IAEMK,SAASC,cAAc,QAE/BC,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAGIC,EAHAC,EAAQC,OAAQJ,EAAIK,cAAcC,MAAMC,OACxCC,EAAOJ,OAAQJ,EAAIK,cAAcG,KAAKD,OACtCE,EAASL,OAAQJ,EAAIK,cAAcI,OAAOF,OAK9Cb,QAAQC,IAAIc,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCR,EAAWQ,EACXC,EAAcT,EAAUC,GACxBA,GAASK,EAGX,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACxB,IAAIC,SAAS,CAACC,EAASC,KACnCC,YAAY,KACNN,EACFI,EAAS,CAACG,SAAAT,EAAUN,MAAAO,IAEpBM,EAAQ,CAACE,SAAAT,EAAUN,MAAAO,GAAO,GACxBA,EAAM,IAIbS,MAAK,EAACD,SAAEA,EAAQf,MAAEA,MACjBV,EAAAJ,GAAS+B,OAAOC,QAAQ,qBAAqBH,QAAef,OAE5DZ,QAAQC,IAAI,uBAAqB0B,QAAiBf,MAAU,IAE/DmB,OAAM,EAACJ,SAAEA,EAAQf,MAAEA,MAChBV,EAAAJ,GAAS+B,OAAOG,QAAQ,oBAAoBL,QAAef,OAE3DZ,QAAQC,IAAI,sBAAoB0B,QAAef,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'; // Для відображення повідомлень користувачеві\nconsole.log(Notiflix);\n\nconst inputForm = document.querySelector('form');\n\ninputForm.addEventListener(`submit`, handlerForm);\n\nfunction handlerForm (evt){\n  evt.preventDefault();\n  \n  let delay = Number (evt.currentTarget.delay.value);\n  let step = Number (evt.currentTarget.step.value);\n  let amount = Number (evt.currentTarget.amount.value);\n  let position;\n\n  // console.log(delay);\n  // console.log(step);\n  console.log(amount);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n    createPromise(position, delay);   \n    delay += step;\n    };\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    let promise = new Promise ((resolve, reject) => {\n      setTimeout (() => {\n        if (shouldResolve) {\n          resolve ({position, delay});\n        } else {\n          reject ({position, delay});           \n        }}, delay);\n    })\n  \n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      \n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n  .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  };\n}"],"names":["$7Y9D8","parcelRequire","console","log","$parcel$interopDefault","document","querySelector","addEventListener","evt","preventDefault","position1","delay1","Number","currentTarget","delay","value","step","amount","i","createPromise","position2","delay2","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.28a003f5.js.map"}