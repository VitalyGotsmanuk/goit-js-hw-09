{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,QAAQC,IAAIC,EAAAJ,IAEMK,SAASC,cAAc,QAE/BC,iBAAkB,UAE5B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAQH,EAAII,cAAcC,MAAMC,OACxCC,EAAOJ,OAAQH,EAAII,cAAcG,KAAKD,OACtCE,EAASL,OAAQH,EAAII,cAAcI,OAAOF,OAK9CZ,QAAQC,IAAIa,GAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhCC,EADWD,EACaP,GACxBA,GAASK,EAGX,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACxB,IAAIC,SAAS,SAACC,EAASC,GACnCC,YAAY,WACNN,EACFI,EAAS,CAACG,SAAAT,EAAUN,MAAAO,IAEpBM,EAAQ,CAACE,SAAAT,EAAUN,MAAAO,G,GACjBA,E,IAIPS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUf,EAAKiB,EAALjB,MACjBT,EAAAJ,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANpB,EAAM,OAElEX,QAAQC,IAAI,uBAAwC8B,OAAfL,EAAS,QAAYK,OAANpB,EAAM,M,IAE7DqB,OAAM,SAAAJ,G,IAAGF,EAAQE,EAARF,SAAUf,EAAKiB,EAALjB,MAChBT,EAAAJ,GAAS+B,OAAOI,QAAQ,oBAAmCF,OAAfL,EAAS,QAAYK,OAANpB,EAAM,OAEjEX,QAAQC,IAAI,sBAAqC8B,OAAfL,EAAS,QAAYK,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'; // Для відображення повідомлень користувачеві\nconsole.log(Notiflix);\n\nconst inputForm = document.querySelector('form');\n\ninputForm.addEventListener(`submit`, handlerForm);\n\nfunction handlerForm (evt){\n  evt.preventDefault();\n  \n  let delay = Number (evt.currentTarget.delay.value);\n  let step = Number (evt.currentTarget.step.value);\n  let amount = Number (evt.currentTarget.amount.value);\n  let position;\n\n  // console.log(delay);\n  // console.log(step);\n  console.log(amount);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n    createPromise(position, delay);   \n    delay += step;\n    };\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    let promise = new Promise ((resolve, reject) => {\n      setTimeout (() => {\n        if (shouldResolve) {\n          resolve ({position, delay});\n        } else {\n          reject ({position, delay});           \n        }}, delay);\n    })\n  \n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      \n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n  .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  };\n}"],"names":["$6JpON","parcelRequire","console","log","$parcel$interopDefault","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","delay","value","step","amount","i","createPromise","position2","delay2","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b6f239d5.js.map"}